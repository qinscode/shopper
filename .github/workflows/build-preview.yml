name: Build Preview APK on Push

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '.github/**'
      - 'docs/**'

  pull_request:
    branches:
      - main
    types: [opened, synchronize]
    paths-ignore:
      - '**/*.md'
      - '.github/**'
      - 'docs/**'

jobs:
  build-preview:
    name: Build Preview APK
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup EAS CLI
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Run linting
        run: npm run lint

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Generate preview version
        id: version
        run: |
          VERSION="preview-$(date +'%Y%m%d')-${GITHUB_SHA:0:7}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "app_name=shopper-$VERSION" >> $GITHUB_OUTPUT

      - name: Update app.json for preview
        run: |
          VERSION="${{ steps.version.outputs.version }}"

          # Update version in app.json
          jq --arg version "$VERSION" '.expo.version = $version' app.json > tmp.json && mv tmp.json app.json

          # Update versionCode
          VERSION_CODE=$(date +%s)
          jq --arg versionCode "$VERSION_CODE" '.expo.android.versionCode = ($versionCode | tonumber)' app.json > tmp.json && mv tmp.json app.json

          # Update app name for preview
          jq '.expo.name = "Shopper (Preview)"' app.json > tmp.json && mv tmp.json app.json

      - name: Build Preview APK
        run: eas build --platform android --profile preview --non-interactive --wait

      - name: Download APK
        run: |
          BUILD_URL=$(eas build:list --platform android --limit 1 --json | jq -r '.[0].artifacts.buildUrl')
          curl -L "$BUILD_URL" -o "${{ steps.version.outputs.app_name }}.apk"

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.version.outputs.app_name }}
          path: ${{ steps.version.outputs.app_name }}.apk
          retention-days: 7

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸ“± **Preview APK Built!**\n\nVersion: ${{ steps.version.outputs.version }}\nDownload: [APK Artifact](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\n\n> This is a preview build for testing. Install and test the changes before merging.`
            });

      - name: Comment on commit
        if: github.event_name == 'push'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `ðŸ“± **Preview APK Available!**\n\nVersion: ${{ steps.version.outputs.version }}\nDownload: [APK Artifact](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`
            });
